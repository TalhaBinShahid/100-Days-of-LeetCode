class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if (head == nullptr || k == 1) return head;
        ListNode* dummy = new ListNode(0);
        dummy->next = head;
        ListNode *prevGroup = dummy, *curr = head;
        int len = 0;
        while (curr) {
            len++;
            curr = curr->next;
        }
        curr = head;
        while (len >= k) {
            ListNode* prev = nullptr;
            ListNode* nextNode;
            for (int i = 0; i < k; i++) {
                nextNode = curr->next;
                curr->next = prev;
                prev = curr;
                curr = nextNode;
            }
            ListNode* temp = prevGroup->next;
            prevGroup->next = prev;
            temp->next = curr;
            prevGroup = temp;
            len -= k;
        }
        return dummy->next;
    }
};